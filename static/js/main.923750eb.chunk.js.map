{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignItems","justifyContent","paper","width","border","column","row","rowItem","borderRight","item","padding","textAlign","borderBottom","image","imageItem","App","useState","value","setValue","data","setData","classes","fetchData","a","array","fetch","then","res","json","result","push","Box","className","style","color","margin","marginTop","onSubmit","e","preventDefault","height","onChange","target","toLowerCase","fontSize","marginLeft","map","d","i","Paper","variant","src","sprites","Typography","fontWeight","types","type","name","Math","round","weight","game_indices","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.923750eb.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport { Paper, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    width: \"40em\",\n    border: \"2px solid gray !important\"\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    border: \"1px solid gray\"\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  rowItem: {\n    borderRight: \"2px solid gray\",\n  },\n  item: {\n    padding: \"1em\",\n    width: \"9em\",\n    textAlign: \"center\",\n    borderBottom: \"2px solid gray\",\n  },\n  image: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"15em\",\n  },\n  imageItem: {\n    width: \"100%\",\n  }\n}))\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [data, setData] = useState([]);\n  const classes = useStyles()\n\n  const fetchData = async() => {\n    const array = [];\n    await fetch(`https://pokeapi.co/api/v2/pokemon/${value}`).then(\n      res => res.json())\n      .then(result => {\n        array.push(result)\n        setData(array)\n      })\n    }\n\n  const handleChange = (e) => {\n    setValue(e.target.value.toLowerCase())\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetchData()\n  }\n\n  return (\n    <Box className={classes.root}>\n      <h1 style={{color: \"green\", margin: \"0\", marginTop: \"2em\"}}>Enter a Pokemon Type</h1>\n      <form onSubmit={handleSubmit}>\n        <h2>\n          <input style={{height: \"2.5em\"}} value={value} onChange={handleChange}/>\n          <button style={{height: \"2em\", fontSize: \"0.8em\", marginLeft: \"0.5em\"}} >Search</button>\n        </h2>\n      </form>\n      {data.map((d, i) => (\n      <Paper className={`${classes.row} ${classes.paper}`} variant=\"outlined\">\n        <Box  className={`${classes.image}`}>\n          <img  className={`${classes.imageItem}`} src={d.sprites[\"front_shiny\"]}/>\n        </Box>\n        <Box className={`${classes.column}`} variant=\"outlined\">\n          <Box className={`${classes.row}`}>\n            <Typography className={`${classes.rowItem} ${classes.item}`} variant=\"h6\">Type</Typography>\n            <Typography fontWeight=\"700\" className={`${classes.item}`} variant=\"h7\">{d.types[0].type.name}</Typography>\n          </Box>\n          <Box className={`${classes.row}`}>\n            <Typography className={`${classes.rowItem} ${classes.item}`} variant=\"h6\">Weight</Typography>\n            <Typography fontWeight=\"700\" className={`${classes.item}`} variant=\"h7\">{`${Math.round(d.weight/4.5)} pounds`}</Typography>\n\n          </Box>\n          <Box className={`${classes.row}`}>\n            <Typography className={`${classes.rowItem} ${classes.item}`} variant=\"h6\">Height</Typography>\n            <Typography fontWeight=\"700\" className={`${classes.item}`} variant=\"h7\">{`${Math.round(d.height/3.1)} ft`}</Typography>\n          </Box>\n          <Box className={`${classes.row}`}>\n            <Typography className={`${classes.rowItem} ${classes.item}`} variant=\"h6\">Number of Battles</Typography>\n            <Typography \n              fontWeight=\"700\" \n              className={`${classes.item}`} \n              variant=\"h7\">{d.game_indices.length}</Typography>\n          </Box>\n        </Box>\n      </Paper>\n      ))}\n    </Box>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}